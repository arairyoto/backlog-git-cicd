AWSTemplateFormatVersion : 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: CloudFormation CI/CD Pipeline for Serverless Framework

Parameters:
  Environment:
    Type: String
  AppName:
    Type: String
  TargetBranchName:
    Type: String
    Default: develop
  Username:
    Type: String
  Password:
    Type: String
    NoEcho: true
  InputSourceCodeFilePath:
    Type: String
    Default: my-source-code-file-name.zip
  Email:
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Backlog Configuration
        Parameters:
          - Username
          - Password
      - Label:
          default: CodePipeline Configuration
        Parameters:
          - Environment
          - Email
          - AppName
          - TargetBranchName
          - InputSourceCodeFilePath
    ParameterLabels:
      Username:
        default: Backlog Username
      Password:
        default: Backlog Password
      Environment:
        default: Environment
      Email:
        default: Email
      AppName:
        default: App Name
      TargetBranchName:
        default: Target Branch Name
      InputSourceCodeFilePath:
        default: Input Source Code File Path

Resources:
  InputBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  CodeBuildBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsAccess
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Sid: S3Access
                Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - arn:aws:s3:::*
              - Sid: CloudFormationAccess
                Effect: Allow
                Action: 
                  - cloudformation:*
                Resource: "*"
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AppName}
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: ENV
            Value: !Ref Environment
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: S3_BUCKET
            Value: !Ref CodeBuildBucket
      Source:
        Type: CODEPIPELINE
  CFnRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: S3FullAccess
                Effect: Allow
                Action: s3:*
                Resource:
                  - !Sub arn:aws:s3:::${InputBucket}
                  - !Sub arn:aws:s3:::${InputBucket}/*
                  - !Sub arn:aws:s3:::${ArtifactStoreBucket}
                  - !Sub arn:aws:s3:::${ArtifactStoreBucket}/*
              - Sid: FullAccess
                Effect: Allow
                Action:
                  - cloudformation:*
                  - iam:PassRole
                Resource: "*"
              - Sid: SNSPublishAccess
                Effect: Allow
                Action: sns:Publish
                Resource: !Ref CodePipelineSNSTopic
              - Sid: CodeBuildAccess
                Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: !GetAtt CodeBuildProject.Arn
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AppName}-pipeline
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreBucket
      Stages:
        - Name: Source
          Actions:
            - Name: CommitAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                S3Bucket: !Ref InputBucket
                S3ObjectKey: !Ref InputSourceCodeFilePath
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Approval
          Actions:
            - Name: ApprovalAction
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: Please review
        - Name: Build
          Actions:
            - InputArtifacts:
                - Name: SourceOutput
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
  PipelineEvent:
    Type: AWS::Events::Rule
    Properties: 
      Description: "EventRule"
      EventPattern: 
        source:
          - aws.codepipeline
        detail:
          pipeline:
            - !Ref Pipeline
          state:
            - SUCCEEDED
            - FAILED
      State: ENABLED
      Targets: 
        - 
          Arn: !Ref CodePipelineSNSTopic
          Id: CodePipelineSNSTopic
  BacklogGitFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      Path: /
      Policies:
        - PolicyName: BacklogGitFunctionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchAccess
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - arn:aws:logs:*:*:*
              - Sid: S3Access
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource:
                  - !Sub arn:aws:s3:::${InputBucket}
                  - !Sub arn:aws:s3:::${InputBucket}/*
              - Sid: SNSAccess
                Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Ref CodePipelineSNSTopic
  BacklogGitApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: api
  BacklogGitFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: It is a Python3 application uploading S3 source codes in Backlog Git.
      Handler: lambda_function.lambda_handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 30
      CodeUri: ./src
      Role: !GetAtt BacklogGitFunctionRole.Arn
      Environment:
        Variables:
          TARGET_BRANCH: !Ref TargetBranchName
          BUCKET_NAME: !Ref InputBucket
          USERNAME: !Ref Username
          PASSWORD: !Ref Password
          FILE_PATH: !Ref InputSourceCodeFilePath
          SNS_TOPIC: !Ref CodePipelineSNSTopic
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref BacklogGitApi
            Path: /
            Method: POST
OutPuts:
  WebhookApiEndpoint:
    Description: "Webhook Api Endpoint"
    Value: !Sub "https://${BacklogGitApi}.execute-api.${AWS::Region}.amazonaws.com/api/"
